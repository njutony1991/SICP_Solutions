(load "1-21.scm")

(define (prime? n)
   (= n (smallest-divisor n))
)
(define (timed-prime-test n)
   (newline)
   (display n)
   (start-prime-test n (real-time-clock))
)

(define (start-prime-test n start-time)
	(if (prime? n)
		(report-prime (- (real-time-clock) start-time)))
)

(define (report-prime cost-time)
	(display "****")
	(newline)
	(display cost-time)
)

(define (nextodd n)
  	(if (odd? n)
  	    (+ n 2)
  	    (+ n 1)
  	)
)

(define (search-for-primes from counter)
	(cond ((= counter 0)
		   (newline)
	       (display "finish"))
		  ((odd? from)
		   (timed-prime-test from)
		   (search-for-primes (nextodd from) (- counter 1))
		  )
	      (else (search-for-primes (nextodd from) counter))
	)  
)