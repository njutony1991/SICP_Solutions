(define (f1 n)
  (cond ((= n 0) 0)
        ((= n 1) 1)
    	((= n 2) 2)
        (else (+ (f1 (- n 1)) (* 2 (f1 (- n 2))) (* 3 (f1 (- n 3)))))))

(define (f2 n)
  (cond ((= n 0) 0)
  		((= n 1) 1)
  		((= n 2) 2)
	    (else (f2-iter 0 1 2 2 n))
  )
)

(define (f2-iter a b c counter n)
   (cond ((= counter n) c)
         (else (f2-iter b c (+ c (* 2 b) (* 3 a)) (+ counter 1) n))
   )
)